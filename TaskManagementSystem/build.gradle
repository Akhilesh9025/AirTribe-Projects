plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.taskmanager'
version = '0.0.1-SNAPSHOT'
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	jjwtVersion = '0.12.5' // Define the desired version here
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// PostgreSQL Driver
	runtimeOnly 'org.postgresql:postgresql'

	// Lombok (managed by the Lombok plugin)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final' // Use the version compatible with your Lombok/Java
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// JJWT (JSON Web Tokens)
	implementation "io.jsonwebtoken:jjwt-api:$jjwtVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"

	// For logging (usually brought in by starters, but explicit if needed)
	implementation 'org.slf4j:slf4j-api'
	runtimeOnly 'ch.qos.logback:logback-classic'

	// Spring Boot Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// MapStruct and Lombok annotation processor configuration for Gradle
// This ensures MapStruct mappers are generated correctly when Lombok is also used.
// It tells MapStruct to use the Spring component model.
tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = file(layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main").get().asFile)
	options.compilerArgs += [
			'-Amapstruct.defaultComponentModel=spring'
	]
}

configurations.all {
	resolutionStrategy {
		force "io.jsonwebtoken:jjwt-api:$jjwtVersion"
		force "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
		force "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"
		// You might also need to force the Jackson databind version if you get related errors
		// force "com.fasterxml.jackson.core:jackson-databind:2.17.1" // Or your desired Jackson version
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(Test).configureEach {
	enabled = false
}
